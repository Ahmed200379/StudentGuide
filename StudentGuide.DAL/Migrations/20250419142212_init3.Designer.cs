// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudentGuide.DAL.Data.Context;

#nullable disable

namespace StudentGuide.DAL.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250419142212_init3")]
    partial class init3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CourseDepartment", b =>
                {
                    b.Property<string>("CoursesCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DepartmentsCode")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("CoursesCode", "DepartmentsCode");

                    b.HasIndex("DepartmentsCode");

                    b.ToTable("CourseDepartment");
                });

            modelBuilder.Entity("CourseStduent", b =>
                {
                    b.Property<string>("CoursesCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("StduentsId")
                        .HasColumnType("int");

                    b.HasKey("CoursesCode", "StduentsId");

                    b.HasIndex("StduentsId");

                    b.ToTable("CourseStduent");
                });

            modelBuilder.Entity("StudentGuide.DAL.Data.Models.Course", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Group")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Hours")
                        .HasColumnType("int");

                    b.Property<bool>("IsCompulsory")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.PrimitiveCollection<string>("Prerequisite_Course")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.PrimitiveCollection<string>("Semesters")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("StudentGuide.DAL.Data.Models.Department", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("StudentGuide.DAL.Data.Models.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CourseCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Drive")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstructorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Youtube")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CourseCode");

                    b.ToTable("Materials");
                });

            modelBuilder.Entity("StudentGuide.DAL.Data.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<bool>("IsPayable")
                        .HasColumnType("bit");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("Payment_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("StduentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StduentId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("StudentGuide.DAL.Data.Models.Stduent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("DepartmentCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("Gpa")
                        .HasMaxLength(5)
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Semester")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentCode");

                    b.ToTable("Stduents");
                });

            modelBuilder.Entity("CourseDepartment", b =>
                {
                    b.HasOne("StudentGuide.DAL.Data.Models.Course", null)
                        .WithMany()
                        .HasForeignKey("CoursesCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentGuide.DAL.Data.Models.Department", null)
                        .WithMany()
                        .HasForeignKey("DepartmentsCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CourseStduent", b =>
                {
                    b.HasOne("StudentGuide.DAL.Data.Models.Course", null)
                        .WithMany()
                        .HasForeignKey("CoursesCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentGuide.DAL.Data.Models.Stduent", null)
                        .WithMany()
                        .HasForeignKey("StduentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StudentGuide.DAL.Data.Models.Material", b =>
                {
                    b.HasOne("StudentGuide.DAL.Data.Models.Course", "Course")
                        .WithMany("Materials")
                        .HasForeignKey("CourseCode");

                    b.Navigation("Course");
                });

            modelBuilder.Entity("StudentGuide.DAL.Data.Models.Payment", b =>
                {
                    b.HasOne("StudentGuide.DAL.Data.Models.Stduent", "stduent")
                        .WithMany("Payments")
                        .HasForeignKey("StduentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("stduent");
                });

            modelBuilder.Entity("StudentGuide.DAL.Data.Models.Stduent", b =>
                {
                    b.HasOne("StudentGuide.DAL.Data.Models.Department", "Department")
                        .WithMany("Stduents")
                        .HasForeignKey("DepartmentCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("StudentGuide.DAL.Data.Models.Course", b =>
                {
                    b.Navigation("Materials");
                });

            modelBuilder.Entity("StudentGuide.DAL.Data.Models.Department", b =>
                {
                    b.Navigation("Stduents");
                });

            modelBuilder.Entity("StudentGuide.DAL.Data.Models.Stduent", b =>
                {
                    b.Navigation("Payments");
                });
#pragma warning restore 612, 618
        }
    }
}
